---
name: Run Tests

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
      - v*
  pull_request:
    branches:
      - main
      - v*
  release:
    types:
      - released

jobs:
  typing:
    name: Typing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: poetry
      - name: Install dependencies
        run: poetry install -E debug-toolbar
      - run: echo "$(poetry env info --path)/bin" >> $"GITHUB_PATH"
      - id: venv
        run: echo "python-path=$(poetry env info --path)/bin/python3" >> "$GITHUB_OUTPUT"
      - name: Check for pyright errors
        uses: jakebailey/pyright-action@v1
        with:
          python-path: ${{ steps.venv.outputs.python-path }}
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        django-version:
          - 3.2.*
          - 4.0.*
          - 4.1.*
          - 4.2.*
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          # FIXME: Replace with 3.12 when available in
          # https://github.com/actions/python-versions/blob/main/versions-manifest.json
          - 3.12.0-rc.3
        mode:
          - std
          - geos
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install OS Dependencies
        if: ${{ matrix.mode == 'geos' }}
        uses: daaku/gh-action-apt-install@v4
        with:
          packages: binutils gdal-bin libproj-dev libsqlite3-mod-spatialite
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Install & Cache Dependencies
        id: cache-deps
        uses: allanchain/poetry-cache-action@release
        with:
          upload-strategy: on-success
          cache-key-prefix: python${{ matrix.python-version }}-django${{ matrix.django-version }}
      - name: Install Django ${{ matrix.django-version }}
        if: ${{ !steps.cache-deps.outputs.cache-hit }}
        run: poetry run pip install  "django==${{ matrix.django-version }}"
      - name: Test with pytest
        run: poetry run pytest --showlocals -vvv --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
